name: Validate-Build-Test with Maven

on:
  push:
    #branches: [ "dev" ]
  pull_request:
    types: [ opened, reopened ]
    branches:
     #    - 'dev**'
       [ "dev" ]

jobs:
   get_main_version:
    runs-on: ubuntu-latest
    outputs:
       ver: ${{steps.step1.outputs.info}}
    steps:    
    - uses: actions/checkout@v4     
      with:
        ref: main
    - id: step1
      run: |
             echo "info="$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)"" >> "$GITHUB_OUTPUT"
   
   validate_version:
    needs: get_main_version
    runs-on: ubuntu-latest
    steps:    
      - uses: actions/checkout@v4   
      - id: getCurrVersion 
      #- name: Print Version
        run: | 
            echo "currver="$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)"" >> "$GITHUB_OUTPUT"
            echo working in ${{github.ref}}
  
      
      #- name: validate version  # Design the logic and Develop the code - to discuss
      - id: validateVersion 
        run: |
            chmod +x scripts/my_script.sh     
            echo "${{needs.get_main_version.outputs.ver}}  \n ${{steps.getCurrVersion.outputs.currver}}"
            echo "info="$(./scripts/my_script.sh  ${{needs.get_main_version.outputs.ver}} ${{steps.getCurrVersion.outputs.currver}})"" >> "$GITHUB_OUTPUT"
      
      - name: StopOrContinue
        if: ${{steps.validateVersion.outputs.info == 'false' }}
        uses: actions/github-script@v7.0.1
        with:
          script: |
            core.setFailed('Please update the project version in pom as per the guidelines')
            
      - name: update version      
        run: #echo ${{ steps.step-validate.outputs.info }}
           mvn versions:set -DnewVersion=${{steps.validateVersion.outputs.info}} -DforceStdout        
        
      - name: verify version after update
        run: mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout                
 
   build_withTestCases:
    needs: validate_version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          java-version: ' 8.0'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B test --file pom.xml      
    
   build:
    needs: build_withTestCases
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          java-version: ' 8.0'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml  -DskipTests 
      - run: mkdir staging && cp target/*.war staging
      - uses: actions/upload-artifact@v4
        with:
          name: Package
          path: staging
